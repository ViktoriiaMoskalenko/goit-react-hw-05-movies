{"version":3,"file":"static/js/610.3660abb2.chunk.js","mappings":"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","sources":["api/API.jsx","pages/MoviesList.jsx","pages/MoviesForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '886b9d3802d0444fafb475c913f007ca'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport async function trendingMovie() {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return response.data\n}\n\nexport async function searchMovie(value) {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${value}`)\n    return response.data\n}\n\nexport async function movieDetails(id) {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return response.data\n}\n\nexport async function movieDetailsCast(id) {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data\n}\n\nexport async function movieDetailsReviews(id) {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response.data\n}","import { Link, useLocation } from 'react-router-dom'\nimport default_poster from '../default_poster.jpg'\nimport styles from '../components/Movies.module.css'\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500'\nexport function MoviesList({ movies }) {\n    const location = useLocation();\n    return (\n        (movies.length !== 0) && <ul className={styles.moviesList}>\n                {movies.map(movie => <li key={movie.id} className={styles.moviesList_item}>\n                    <Link to={`${movie.id}`} state={{ from: location }} className={styles.item}>\n                        <img src={ movie.poster_path ? BASE_URL + movie.poster_path: default_poster} alt = {movie.original_title} className={ styles.moviesList_poster } />\n                        <h2 className={styles.moviesList_title}>{movie.original_title}</h2>\n                    </Link>\n            </li>)}\n        </ul>\n    )\n}","import { Formik, Field, Form } from 'formik'\nimport styles from '../components/Movies.module.css'\nexport function MoviesForm({onSubmit}) {\n    return (\n     <Formik initialValues={{ name: '' }} onSubmit={onSubmit} >\n            <Form className={styles.form}>\n                    <Field name=\"name\" placeholder=\"Search movie\" type=\"text\" autoFocus className={styles.form_input}/>\n                <button type=\"submit\" className={styles.form_button}>Search</button>\n            </Form>\n            </Formik>\n      //   <input\n      //   type=\"text\"\n      //   value={value}\n      //   onChange={(e) => onChange(e.target.value)}\n      // />\n )   \n}\n\n","import { useState, useEffect } from 'react'\nimport { useSearchParams } from \"react-router-dom\";\nimport { searchMovie } from '../api/API'\nimport { Audio } from 'react-loader-spinner'\nimport { MoviesList } from './MoviesList'\nimport { MoviesForm } from './MoviesForm'\nimport styles from '../components/Movies.module.css'\n\nfunction Movies() {\n  const [movies, setMovies] = useState([])\n  const [loader, setLoader] = useState(false)\n    \n      const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get(\"name\") ?? \"\";\n    \n  function handleSubmit(values, actions) {\n      const {name} = values\n    const nextParams = name !== \"\" ? { name } : {};\n        setSearchParams(nextParams);\n        \n        actions.resetForm()\n\n    }\n\n  useEffect(() => {\n    if (!movieName) {\n        return\n      }\n    const response = searchMovie(movieName)\n        setLoader(true)\n      response.then(data => {\n        setMovies(data.results)\n        setLoader(false)\n      }).catch(error => console.log(error))\n\n    },[movieName])\n\n\n\n  const visibleProducts = movies.filter((movie) =>\n    movie.original_title.toLowerCase().includes(movieName.toLowerCase())\n  );\n    \n\n    return (\n      <div>\n        \n        <MoviesForm value={movieName} onSubmit={handleSubmit} />\n        {loader && <div className={styles.Loader}><Audio\n  height=\"80\"\n  width=\"80\"\n  radius=\"9\"\n  color=\"green\"\n  ariaLabel=\"loading\"\n  wrapperStyle\n  wrapperClass={{\n  }}\n          visible={true}\n/></div>}\n\n        <MoviesList movies={visibleProducts} />\n        \n        </div>\n    )\n}\n\nexport default Movies;"],"names":["API_KEY","trendingMovie","axios","response","data","searchMovie","value","movieDetails","id","movieDetailsCast","movieDetailsReviews","MoviesList","movies","location","useLocation","length","className","styles","map","movie","to","state","from","src","poster_path","default_poster","alt","original_title","MoviesForm","onSubmit","initialValues","name","placeholder","type","autoFocus","useState","setMovies","loader","setLoader","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","then","results","catch","error","console","log","visibleProducts","filter","toLowerCase","includes","values","actions","resetForm","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}